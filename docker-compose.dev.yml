services:
  backend:
    build: ./backend
    ports:
      - 4000:4000
    volumes:
      - ./backend/src:/app/src
    healthcheck:
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:4000'' --data ''{"query":"query { __typename }"}'' || exit 1'
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      db:
        condition: service_healthy
  frontend:
    build: ./frontend
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src:/app/src
    depends_on:
      backend:
        condition: service_healthy
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data
  imagesupload:
    build: ./imagesupload
    volumes:
      - ./imagesupload/src:/app/src
      - ./imagesupload/uploads:/app/uploads
    ports:
      - 8000:8000
  adminer:
    image: adminer
    ports:
      - 8080:8080
volumes:
  pgdata:
